// Generated by CoffeeScript 1.8.0
(function() {
  var Board, Label, List, Member;

  List = require("./List");

  Member = require("./Member");

  Label = require("./Label");

  module.exports = Board = (function() {
    function Board(boardData, onReady) {
      var labelData, memberData, _i, _j, _len, _len1, _ref, _ref1;
      this.id = boardData.id;
      this.name = boardData.name;
      this.lists = [];
      this.members = [];
      this.labels = [];
      this.trelloObj = boardData;
      _ref = boardData.members;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        memberData = _ref[_i];
        this.members.push(new Member(memberData));
      }
      _ref1 = boardData.label;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        labelData = _ref1[_j];
        this.labels.push(new Label(labelData));
      }
      this.makeReadyLists((function(_this) {
        return function() {
          return onReady(_this);
        };
      })(this));
      this;
    }

    Board.prototype.makeReadyLists = function(onReady) {
      var listData, _i, _len, _ref;
      _ref = this.trelloObj.lists;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        listData = _ref[_i];
        this.lists.push(new List(listData, this.trelloObj));
      }
      return onReady();
    };

    Board.prototype.getList = function(id) {
      var list, _i, _len, _ref;
      if (typeof id === "string") {
        _ref = this.lists;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          list = _ref[_i];
          if (list.name === id) {
            return list;
          }
        }
        return void 0;
      }
      return this.lists[id];
    };

    return Board;

  })();

}).call(this);
